#### python modules ####

import glob
import os

#### CONFIG FILE ####
#which datasets are to be aligned to which hosts and viruses are specified in dsets.yaml
configfile: "rearrange.yaml"

#this is of the form { dset1: {virus: virus1}, dset2: {virus: virus2} }

#make four lists, with each entry in each list corresponding to one desired output file

DATASETS = []
SAMPLES = []
VIRUSES = []

for dataset in config:
	#get files in directory and strip off "_R1.fastq.gz"
	samples = [os.path.basename(f)[:-12] for f in glob.glob("../../data/reads/{}/*_R1.fastq.gz".format(dataset))]
	for sample in samples:
		DATASETS.append(dataset)
		SAMPLES.append(sample)
		VIRUSES.append(config[dataset]["virus"])

#### target files ####


rule all:
	input: 
		"../../out/summary/rearrange/num_rearrange.xlsx"
		


#### perl scripts ####

rule run_rearrange_scripts:
	input:
		"../../out/{dset}/virus_aligned/{samp}.{virus}.bwa.bam"
	output:
		txt = "../../out/{dset}/rearrange/{samp}.{virus}.rearrange.txt",
		bed = "../../out/{dset}/rearrange/{samp}.{virus}.rearrange.bed",
		sam = temp("../../out/{dset}/virus_aligned/{samp}.{virus}.bwa.sam")
	conda: 
		"../envs/bwa.yml"

	shell:
		"""
		samtools view {input} > {output.sam} 
		perl -I .. ./checkVecRearrange.pl --viral {output.sam} --output {output.txt} --bed {output.bed}
		"""


#### visualisation ####

rule summarise_rearrange:
	input:
		txt = expand("../../out/{dset}/rearrange/{samp}.{virus}.rearrange.txt", zip, dset = DATASETS, samp = SAMPLES, virus = VIRUSES)
	output:
		"../../out/summary/rearrange/num_rearrange.xlsx"
	conda:
		"../envs/rscripts.yml"
	script:
		"count_rearrange.R"

		
